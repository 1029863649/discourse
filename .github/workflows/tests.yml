name: Tests

on:
  pull_request:
    paths-ignore:
      - "migrations/**"
  push:
    branches:
      - main
      - beta
      - stable
    paths-ignore:
      - "migrations/**"

concurrency:
  group: tests-${{ format('{0}-{1}', github.head_ref || github.run_number, github.job) }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    runs-on: 'ubuntu-20.04-8core'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create builder
        run: docker buildx create --use
      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: ./.github/test-image
          build-args: |
            github_sha=${{ github.sha }}
          tags: myimage:latest
          cache-to: type=gha,mode=min,scope=${{github.run_id}}

  use:
    runs-on: 'ubuntu-20.04-8core'
    needs: build

    strategy:
      fail-fast: false

      matrix:
        build_type: [backend, frontend, system]

    defaults:
      run:
        shell: bash -eo pipefail -c "cat {0} | docker exec -i -w /var/www/discourse -u discourse myimage bash --noprofile --norc -eo pipefail"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create builder
        shell: bash
        run: docker buildx create --use
      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: ./.github/test-image
          build-args: |
            github_sha=${{ github.sha }}
          tags: myimage:latest
          cache-from: type=gha,scope=${{github.run_id}}
          push: true
      - name: Start image
        shell: bash
        run: docker run --entrypoint='' --rm -d --name myimage myimage:latest tail -f /dev/null
      - name: Start redis
        run: redis-server --dir tmp/test_data/redis --daemonize yes
      - name: Start postgres
        run: script/start_test_db.rb --skip-setup
      - name: Core RSpec
        if: matrix.build_type == 'backend'
        run: bin/turbo_rspec --use-runtime-info --verbose --format documentation
      - name: Ember Build for System Tests
        if: matrix.build_type == 'system'
        run: bin/ember-cli --build
      - name: Core System
        if: matrix.build_type == 'system'
        run: RAILS_ENABLE_TEST_LOG=1 RAILS_TEST_LOG_LEVEL=error PARALLEL_TEST_PROCESSORS=4 bin/turbo_rspec --use-runtime-info --profile=50 --verbose --format documentation spec/system
      - name: Frontend
        if: matrix.build_type == 'frontend'
        run: CI=1 bin/yarn-app ember exam --load-balance --parallel=5 --launch Chrome --write-execution-file --random



