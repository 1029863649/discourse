diff --git a/node_modules/ember-template-imports/lib/index.js b/node_modules/ember-template-imports/lib/index.js
index 42dd417..2d10552 100644
--- a/node_modules/ember-template-imports/lib/index.js
+++ b/node_modules/ember-template-imports/lib/index.js
@@ -7,3 +7,7 @@ Object.defineProperty(exports, "DEFAULT_PARSE_TEMPLATES_OPTIONS", { enumerable:
 var util_1 = require("./util");
 Object.defineProperty(exports, "isStrictMode", { enumerable: true, get: function () { return util_1.isStrictMode; } });
 Object.defineProperty(exports, "isSupportedScriptFileExtension", { enumerable: true, get: function () { return util_1.isSupportedScriptFileExtension; } });
+var babel_plugin_1 = require("../src/babel-plugin");
+Object.defineProperty(exports, "babelPlugin", { enumerable: true, get: function () { return babel_plugin_1; } });
+var preprocess_embedded_templates1 = require("./preprocess-embedded-templates");
+Object.defineProperty(exports, "preprocessEmbeddedTemplates", { enumerable: true, get: function () { return preprocess_embedded_templates1.preprocessEmbeddedTemplates; } });
diff --git a/node_modules/ember-template-imports/lib/preprocess-embedded-templates.js b/node_modules/ember-template-imports/lib/preprocess-embedded-templates.js
index f50518b..9c49386 100644
--- a/node_modules/ember-template-imports/lib/preprocess-embedded-templates.js
+++ b/node_modules/ember-template-imports/lib/preprocess-embedded-templates.js
@@ -5,7 +5,6 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.preprocessEmbeddedTemplates = void 0;
 const magic_string_1 = __importDefault(require("magic-string"));
-const path_1 = __importDefault(require("path"));
 const line_column_1 = __importDefault(require("line-column"));
 const debug_1 = require("./debug");
 const parse_templates_1 = require("./parse-templates");
@@ -27,8 +26,12 @@ function replacementFrom(template, index, oldLength, newLength, type) {
     };
 }
 function loadGetTemplateLocals(path, exportPath) {
-    // eslint-disable-next-line @typescript-eslint/no-var-requires
-    const templateLocals = require(path);
+    let templateLocals = path;
+
+    if (typeof path === "string") {
+      // eslint-disable-next-line @typescript-eslint/no-var-requires
+      templateLocals = require(path);
+    }
     let getTemplateLocals = templateLocals;
     for (const segment of exportPath.split('.')) {
         getTemplateLocals = getTemplateLocals[segment];
@@ -117,6 +120,7 @@ function preprocessEmbeddedTemplates(template, options) {
     let output = s.toString();
     const hasChanges = template !== output;
     if (includeSourceMaps && hasChanges) {
+        const path_1 = __importDefault(require('path'));
         const { dir, name } = path_1.default.parse(relativePath);
         const map = s.generateMap({
             file: `${dir}/${name}.js`,
diff --git a/node_modules/ember-template-imports/src/template-literal-transform.js b/node_modules/ember-template-imports/src/template-literal-transform.js
index 5e3bdc2..d487897 100644
--- a/node_modules/ember-template-imports/src/template-literal-transform.js
+++ b/node_modules/ember-template-imports/src/template-literal-transform.js
@@ -1,4 +1,3 @@
-const filePath = require('path');
 const {
   registerRefs,
   TEMPLATE_LITERAL_IDENTIFIER,
@@ -8,7 +7,7 @@ const {
 module.exports.transformTemplateLiteral = function (t, path, state) {
   let { parentPath } = path;
   let compiled = buildPrecompileTemplateCall(t, path, state);
-  let filename = filePath.parse(state.file.opts.filename).name;
+  let filename = state.file.opts.filename;
 
   if (parentPath.node.type === 'ClassProperty') {
     if (parentPath.node.static !== true) {
diff --git a/node_modules/ember-template-imports/src/template-tag-transform.js b/node_modules/ember-template-imports/src/template-tag-transform.js
index a7b6d51..79de00b 100644
--- a/node_modules/ember-template-imports/src/template-tag-transform.js
+++ b/node_modules/ember-template-imports/src/template-tag-transform.js
@@ -1,4 +1,3 @@
-const filePath = require('path');
 const {
   registerRefs,
   TEMPLATE_TAG_NAME,
@@ -21,7 +20,7 @@ const {
 module.exports.transformTemplateTag = function (t, templatePath, state) {
   let compiled = buildPrecompileTemplateCall(t, templatePath, state);
   let path = templatePath.parentPath;
-  let filename = filePath.parse(state.file.opts.filename).name;
+  let filename = state.file.opts.filename;
 
   if (path.type === 'ArrayExpression') {
     let arrayParentPath = path.parentPath;
